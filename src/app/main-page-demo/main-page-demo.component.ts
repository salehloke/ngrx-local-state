import { Component, OnInit } from '@angular/core';
import { FormBuilder, UntypedFormGroup } from '@angular/forms';
import { ComponentStore } from '@ngrx/component-store';
import { Observable } from 'rxjs';
import { FormStatus, MainPageDemoStore } from './main-page-demo.store';

@Component({
  selector: 'app-main-page-demo',
  templateUrl: './main-page-demo.component.html',
  styleUrls: ['./main-page-demo.component.css'],
  providers: [MainPageDemoStore],
})
export class MainPageDemoComponent implements OnInit {
  pageMode$ = this.mainPageDemoStore.pageMode$;
  formStatus$ = this.mainPageDemoStore.formStatus$;

  basicForm: UntypedFormGroup;
  constructor(
    private readonly mainPageDemoStore: MainPageDemoStore,
    private fb: FormBuilder
  ) {}

  ngOnInit() {
    // listen to the page mode changes
    this.initForm();
  }

  initForm() {
    this.basicForm = this.fb.group({
      name: [''],
      age: 0,
      remarks: [''],
    });
    // NAME
    this.basicForm.controls.name.valueChanges.subscribe((value) => {
      this.autoGeneratedRemarks();
    });
    // AGE
    this.basicForm.controls.age.valueChanges.subscribe((value) => {
      this.autoGeneratedRemarks();
    });

    /// control form readonly
    this.formStatus$.subscribe((value) => {
      console.log('isReadOnly:', value);

      if (value === FormStatus.isReadOnly) {
        this.basicForm.disable();
        this.basicForm.updateValueAndValidity();
      } else if (value === FormStatus.isEditable) {
        this.basicForm.enable();
        this.basicForm.updateValueAndValidity();
      } else if (value === FormStatus.remarkOnly) {
        this.basicForm.disable();
        this.basicForm.controls.remarks.enable();
        this.basicForm.updateValueAndValidity();
      }
    });
  }

  autoGeneratedRemarks() {
    const name = this.basicForm.controls.name.value
      ? this.basicForm.controls.name.value
      : '<name>';
    const age: string | number =
      this.basicForm.controls.age.value > 0
        ? this.basicForm.controls.age.value
        : '<age>';
    const remarks = `${name} is ${age} years old`;

    this.basicForm.controls.remarks.setValue(remarks);
  }

  defaultMode() {
    this.mainPageDemoStore.setDefaultPageMode();
  }

  addMode() {
    this.mainPageDemoStore.setAddPageMode();
  }

  remarkOnlyMode() {
    this.mainPageDemoStore.setRemarkOnlyMode();
  }
}
