{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nimport { FormStatus, MainPageDemoStore } from './main-page-demo.store';\nlet MainPageDemoComponent = class MainPageDemoComponent {\n  constructor(mainPageDemoStore, fb) {\n    this.mainPageDemoStore = mainPageDemoStore;\n    this.fb = fb;\n    this.pageMode$ = this.mainPageDemoStore.pageMode$;\n    this.formStatus$ = this.mainPageDemoStore.formStatus$;\n  }\n\n  ngOnInit() {\n    // listen to the page mode changes\n    this.initForm();\n  }\n\n  initForm() {\n    this.basicForm = this.fb.group({\n      name: [''],\n      age: 0,\n      remarks: ['']\n    }); // NAME\n\n    this.basicForm.controls.name.valueChanges.subscribe(value => {\n      this.autoGeneratedRemarks();\n    }); // AGE\n\n    this.basicForm.controls.age.valueChanges.subscribe(value => {\n      this.autoGeneratedRemarks();\n    }); /// control form readonly\n\n    this.formStatus$.subscribe(value => {\n      console.log('isReadOnly:', value);\n\n      if (value === FormStatus.isReadOnly) {\n        this.basicForm.disable();\n        this.basicForm.updateValueAndValidity();\n      } else if (value === FormStatus.isEditable) {\n        this.basicForm.enable();\n        this.basicForm.updateValueAndValidity();\n      } else if (value === FormStatus.remarkOnly) {\n        this.basicForm.disable();\n        this.basicForm.controls.remarks.enable();\n        this.basicForm.updateValueAndValidity();\n      }\n    });\n  }\n\n  autoGeneratedRemarks() {\n    const name = this.basicForm.controls.name.value ? this.basicForm.controls.name.value : '<name>';\n    const age = this.basicForm.controls.age.value > 0 ? this.basicForm.controls.age.value : '<age>';\n    const remarks = `${name} is ${age} years old`;\n    this.basicForm.controls.remarks.setValue(remarks);\n  }\n\n  defaultMode() {\n    this.mainPageDemoStore.setDefaultPageMode();\n  }\n\n  addMode() {\n    this.mainPageDemoStore.setAddPageMode();\n  }\n\n  remarkOnlyMode() {\n    this.mainPageDemoStore.setRemarkOnlyMode();\n  }\n\n};\nMainPageDemoComponent = __decorate([Component({\n  selector: 'app-main-page-demo',\n  templateUrl: './main-page-demo.component.html',\n  styleUrls: ['./main-page-demo.component.css'],\n  providers: [MainPageDemoStore]\n})], MainPageDemoComponent);\nexport { MainPageDemoComponent };","map":null,"metadata":{},"sourceType":"module"}