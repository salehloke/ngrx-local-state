{"ast":null,"code":"import { FormStatus, MainPageDemoStore } from './main-page-demo.store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./main-page-demo.store\";\nimport * as i2 from \"@angular/forms\";\nexport let MainPageDemoComponent = /*#__PURE__*/(() => {\n  class MainPageDemoComponent {\n    constructor(mainPageDemoStore, fb) {\n      this.mainPageDemoStore = mainPageDemoStore;\n      this.fb = fb;\n      this.pageMode$ = this.mainPageDemoStore.pageMode$;\n      this.formStatus$ = this.mainPageDemoStore.formStatus$;\n    }\n\n    ngOnInit() {\n      // listen to the page mode changes\n      this.initForm();\n    }\n\n    initForm() {\n      this.basicForm = this.fb.group({\n        name: [''],\n        age: 0,\n        remarks: ['']\n      }); // NAME\n\n      this.basicForm.controls.name.valueChanges.subscribe(value => {\n        this.autoGeneratedRemarks();\n      }); // AGE\n\n      this.basicForm.controls.age.valueChanges.subscribe(value => {\n        this.autoGeneratedRemarks();\n      }); /// control form readonly\n\n      this.formStatus$.subscribe(value => {\n        console.log('isReadOnly:', value);\n\n        if (value === FormStatus.isReadOnly) {\n          this.basicForm.disable();\n          this.basicForm.updateValueAndValidity();\n        } else if (value === FormStatus.isEditable) {\n          this.basicForm.enable();\n          this.basicForm.updateValueAndValidity();\n        } else if (value === FormStatus.remarkOnly) {\n          this.basicForm.disable();\n          this.basicForm.controls.remarks.enable();\n          this.basicForm.updateValueAndValidity();\n        }\n      });\n    }\n\n    autoGeneratedRemarks() {\n      const name = this.basicForm.controls.name.value ? this.basicForm.controls.name.value : '<name>';\n      const age = this.basicForm.controls.age.value > 0 ? this.basicForm.controls.age.value : '<age>';\n      const remarks = `${name} is ${age} years old`;\n      this.basicForm.controls.remarks.setValue(remarks);\n    }\n\n    defaultMode() {\n      this.mainPageDemoStore.setDefaultPageMode();\n    }\n\n    addMode() {\n      this.mainPageDemoStore.setAddPageMode();\n    }\n\n    remarkOnlyMode() {\n      this.mainPageDemoStore.setRemarkOnlyMode();\n    }\n\n  }\n\n  MainPageDemoComponent.ɵfac = function MainPageDemoComponent_Factory(t) {\n    return new (t || MainPageDemoComponent)(i0.ɵɵdirectiveInject(i1.MainPageDemoStore), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  MainPageDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainPageDemoComponent,\n    selectors: [[\"app-main-page-demo\"]],\n    features: [i0.ɵɵProvidersFeature([MainPageDemoStore])],\n    decls: 30,\n    vars: 1,\n    consts: [[1, \"container\", \"p-5\"], [1, \"p-2\"], [3, \"formGroup\"], [1, \"row\", \"mb-2\"], [\"for\", \"name\", 1, \"col-4\", \"col-form-label\"], [1, \"col-8\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Name\", 1, \"form-control\"], [\"for\", \"age\", 1, \"col-4\", \"col-form-label\"], [\"type\", \"number\", \"id\", \"age\", \"formControlName\", \"age\", \"placeholder\", \"Age\", 1, \"form-control\"], [\"for\", \"remarks\", 1, \"col-4\", \"col-form-label\"], [\"type\", \"text\", \"id\", \"remarks\", \"formControlName\", \"remarks\", \"placeholder\", \"Remarks\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"btn\", \"btn-primary\", \"m-3\", 3, \"click\"]],\n    template: function MainPageDemoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Basic Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\")(4, \"form\", 2)(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Age \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Remarks \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 5);\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Submit\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(22, \"div\");\n        i0.ɵɵelementStart(23, \"div\", 12)(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MainPageDemoComponent_Template_button_click_24_listener() {\n          return ctx.defaultMode();\n        });\n        i0.ɵɵtext(25, \"default\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MainPageDemoComponent_Template_button_click_26_listener() {\n          return ctx.addMode();\n        });\n        i0.ɵɵtext(27, \"add mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MainPageDemoComponent_Template_button_click_28_listener() {\n          return ctx.remarkOnlyMode();\n        });\n        i0.ɵɵtext(29, \" remark only mode \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.basicForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return MainPageDemoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}